name: Build wheels

# Only build on tagged releases
on:
  push:
    branches:
      - '*'

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest]
    env:
      FC: gfortran-11
      F77: gfortran-11
      F90: gfortran-11
      CC: gcc-11
    defaults:
      run:
        shell: bash -l {0}

    steps:
      - uses: actions/checkout@v3

      # Only on the Windows runner
      - name: Add Windows environment settings
        if: startsWith(matrix.os, 'windows')
        run: |
          echo "C:\msys64\mingw64\bin" >> $GITHUB_PATH
          echo "C:\msys64\usr\bin" >> $GITHUB_PATH
          echo "FC=gfortran" >> $GITHUB_ENV
          echo "F77=gfortran" >> $GITHUB_ENV
          echo "F90=gfortran" >> $GITHUB_ENV
          echo "CC=gcc" >> $GITHUB_ENV

      - name: Install gfortran for ARM64
        run: |
          curl -L -O https://github.com/isuruf/gcc/releases/download/gcc-10-arm-20210728/gfortran-darwin-arm64.tar.gz
          # export GFORTRAN_SHA=f26990f6f08e19b2ec150b9da9d59bd0558261dd
          # if [[ "$(shasum gfortran-darwin-arm64.tar.gz)" != "${GFORTRAN_SHA}  gfortran-darwin-arm64.tar.gz" ]]; then
          #     echo "shasum mismatch for gfortran-darwin-arm64"
          #     exit 1
          # fi
          sudo mkdir -p /opt/
          sudo cp "gfortran-darwin-arm64.tar.gz" /opt/gfortran-darwin-arm64.tar.gz
          pushd /opt
              sudo tar -xvf gfortran-darwin-arm64.tar.gz
              sudo rm gfortran-darwin-arm64.tar.gz
          popd
          export FC_ARM64="$(find /opt/gfortran-darwin-arm64/bin -name "*-gfortran")"
          libgfortran="$(find /opt/gfortran-darwin-arm64/lib -name libgfortran.dylib)"
          libdir=$(dirname $libgfortran)

          export FC_ARM64_LDFLAGS="-L$libdir -Wl,-rpath,$libdir"

          which gfortran
          export FC=$FC_ARM64
          echo $FC
          echo "FC=${FC}" >> $GITHUB_ENV
          echo "LDFLAGS=${FC_ARM64_LDFLAGS}" >> $GITHUB_ENV

      - uses: actions/setup-python@v4
        name: Install Python
        with:
          python-version: '3.9'

      - name: Download source files
        run: |
          which python
          python3 .github/workflows/download_mirror.py

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.9.0
        env:
          CIBW_BUILD: "cp39-*"
          # TODO: Look into universal2 support, but compilers and options
          #       will be tricky with the Fortran code and tests...
          CIBW_ARCHS_MACOS: universal2

      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl
