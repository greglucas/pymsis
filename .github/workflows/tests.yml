# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: pymsis

on:
  push:
    branches: [ '*' ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [windows-2019]
        python-version: [3.9]
    env:
      FC: gfortran-9
      F77: gfortran-9
      F90: gfortran-9
      CC: gcc-9
    defaults:
      run:
        shell: bash

    steps:
    - uses: actions/checkout@v2

    # Only on the Windows runner
    - name: Add Windows environment settings
      if: startsWith(matrix.os, 'windows')
      run: |
        echo "C:\msys64\mingw64\bin" >> $GITHUB_PATH
        echo "C:\msys64\usr\bin" >> $GITHUB_PATH
        echo "FC=gfortran" >> $GITHUB_ENV
        echo "F77=gfortran" >> $GITHUB_ENV
        echo "F90=gfortran" >> $GITHUB_ENV
        echo "CC=gcc" >> $GITHUB_ENV

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Download source files
      run: |
        python .github/workflows/download_mirror.py

    - name: Meson-only build
      run: |
        pip install meson ninja numpy
        meson setup build --prefix=$PWD/build
        ninja -j 2 -C build
        cd build
        meson install
    
    - name: Meson list
      run: |
        cd build/Lib/site-packages/pymsis
        ls
        python -c "import msis00f"

    - name: Install pymsis
      run: |
        python -m pip install --upgrade pip
        pip install -v .[tests]

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --show-source --statistics

    - name: Prep test
      run: |
        export PYTHONPATH="C:\hostedtoolcache\windows\Python\3.9.13\x64\lib\site-packages\pymsis"
        echo $PYTHONPATH
        ls $PYTHONPATH
        cd $PYTHONPATH
        echo "pyd DEPENDENTS"
        dumpbin /dependents msis00f.cp39-win_amd64.pyd
        echo "IN DIRECTORY"
        ls
        python -c "import pymsis.msis"

    - name: Test with pytest
      run: |
        export PYTHONPATH="C:\hostedtoolcache\windows\Python\3.9.13\x64\Lib\site-packages\pymsis"
        echo $PYTHONPATH
        ls $PYTHONPATH
        echo "LINEBREAK"
        export PYTHONPATH="C:\hostedtoolcache\windows\Python\3.9.13\x64\lib\site-packages\pymsis"
        echo $PYTHONPATH
        ls $PYTHONPATH

        pytest --pyargs pymsis --color=yes --cov --cov-report=xml

    - name: Upload code coverage
      uses: codecov/codecov-action@v2
